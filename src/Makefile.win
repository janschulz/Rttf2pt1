CC = `"$(R_HOME)/bin/R" CMD config CC`
CFLAGS = `"$(R_HOME)/bin/R" CMD config CFLAGS` -m32 -DWINDOWS


# Make setup flags for Freetype 2. These settings are used on the first run
# of "make", to set up the options for the the second run of make, which
# does the compiling. These settings are needed to convince it that it is
# running on a normal Unix-like system, because otherwise it will think
# that it's running on a normal Windows system, but it won't compile
# correctly.
FT2_MAKE_SETUP_FLAGS = PLATFORM=ansi CONFIG_FILE=ansi.mk std_setup
# CFLAGS for freetype. Need -c to not run linker (otherwise it doesn't compile)
FT2_CFLAGS = $(CFLAGS) -c

# CFLAGS for ttf2pt1 - force 32-bit binary
# Also add the definitions for CFLAGS_FT and LIBS_FT from ttf2pt1's Makefile
TTF2PT1_CFLAGS = $(CFLAGS) -DUSE_FREETYPE -I../freetype2/include
# Linker flags for ttf2pt1
TTF2PT1_LIBS_FT = -L../freetype2/objs -lfreetype

# Run make in subdirs
all:
	echo "make in freetype2/ ..."
	(cd freetype2; $(MAKE) CC="$(CC)" $(FT2_MAKE_SETUP_FLAGS); $(MAKE) CC="$(CC)" CFLAGS="$(FT2_CFLAGS)")
	echo "make ttf2pt1 in ttf2pt1/ ..."
	(cd ttf2pt1; $(MAKE) CC="$(CC)" CFLAGS="$(TTF2PT1_CFLAGS)" LIBS_FT="$(TTF2PT1_LIBS_FT)" ttf2pt1)

clean:
	echo "make distclean in freetype2/ ..."
	(cd freetype2; $(MAKE) distclean)
	echo "make veryclean in ttf2pt1/ ..."
	(cd ttf2pt1; $(MAKE) veryclean)
